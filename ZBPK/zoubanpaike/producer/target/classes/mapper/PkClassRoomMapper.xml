<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dckj.arrange.producer.mapper.PkClassRoomMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="dckj.arrange.common.entity.PkClassRoom">
        <id column="id" property="id"/>
        <result column="task_id" property="taskId"/>
        <result column="class_id" property="classId"/>
        <result column="site_id" property="siteId"/>
        <result column="room_id" property="roomId"/>
        <result column="room_name" property="roomName"/>
        <result column="site_name" property="siteName"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>
    <resultMap id="BaseResultMap1" type="dckj.arrange.common.model.request.ClassRoomReq">
        <id column="id" property="id"/>
        <result column="class_id" property="classId"/>
        <result column="room_name" property="roomName"/>
        <result column="site_name" property="siteName"/>
        <result column="site_id" property="siteId"/>
        <result column="room_id" property="roomId"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, task_id , class_id , site_id , room_id , room_name , site_name , create_time , update_time
    </sql>
    <select id="selectByGradeId" parameterType="dckj.arrange.common.model.request.ClassRoomReq" resultMap="BaseResultMap1">
        select pcr.id ,pc.class_name,pcr.room_name,pcr.site_name,pc.id as class_id,pcr.site_id,pcr.room_id,pcr.task_id
        from pk_class_room pcr
        RIGHT JOIN pk_class pc on  pcr.class_id  = pc.id
        where pc.grade_id = #{gradeId,jdbcType=VARCHAR}
        and pc.school_code = #{schoolCode,jdbcType=VARCHAR}
        and pcr.task_id =#{taskId}
        ORDER BY pc.class_name
    </select>

    <select id="getClassRoomList" parameterType="dckj.arrange.common.model.request.BaseReq" resultType="dckj.arrange.common.model.PkClassRoomDto">
      SELECT pcr.*, pc.class_name className
        FROM
        pk_class_room pcr
        LEFT JOIN
        pk_class pc
        ON
        pcr.class_id=pc.id
        WHERE
        pcr.task_id=#{taskId};
    </select>

    <select id="getCdList" parameterType="dckj.arrange.common.model.request.BaseReq" resultType="dckj.arrange.common.model.ClassDto">
        SELECT pcr.class_id classId, pc.class_name className
        FROM
        pk_class_room pcr
        LEFT JOIN
        pk_class pc
        ON
        pcr.class_id=pc.id
        WHERE
        pcr.task_id=#{taskId};
    </select>

    <insert id="insertBatch" parameterType="java.util.List">
        insert into pk_class_room (<include refid="Base_Column_List"/>)
        values
        <foreach collection="list" item="classRoom" separator=",">
            (#{classRoom.id,jdbcType=VARCHAR} ,#{classRoom.taskId,jdbcType=VARCHAR} ,#{classRoom.classId,jdbcType=VARCHAR} ,
            #{classRoom.siteId,jdbcType=VARCHAR} ,#{classRoom.roomId,jdbcType=VARCHAR} ,#{classRoom.roomName,jdbcType=VARCHAR} ,
            #{classRoom.siteName,jdbcType=VARCHAR} ,#{classRoom.createTime,jdbcType=TIMESTAMP} ,#{classRoom.updateTime,jdbcType=TIMESTAMP} )
        </foreach>
    </insert>
</mapper>

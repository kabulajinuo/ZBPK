<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dckj.arrange.producer.mapper.PkTeacherInfoMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="dckj.arrange.common.entity.PkTeacherInfo">
        <id column="user_id" property="userId"/>
        <result column="post_ids" property="postIds"/>
        <result column="subject_ids" property="subjectIds"/>
        <result column="job_no" property="jobNo"/>
        <result column="teacher_name" property="teacherName"/>
        <result column="school_code" property="schoolCode"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <resultMap id="BaseResultMap1" type="dckj.arrange.common.model.request.TeacherInfoVo">
        <id column="user_id" property="userId"/>
        <result column="post_ids" property="postIds"/>
        <result column="subject_ids" property="subjectIds"/>
        <result column="job_no" property="jobNo"/>
        <result column="teacher_name" property="teacherName"/>
        <result column="school_code" property="schoolCode"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        user_id , post_ids , subject_ids , job_no , teacher_name , school_code , create_time , update_time
    </sql>
    <select id="selectByCodeAndUserId" resultMap="BaseResultMap1"
            parameterType="dckj.arrange.common.model.request.TeacherInfoVo">
        SELECT
        ti.user_id,
        ti.teacher_name,
        ti.job_no,
        bu.gender,
        ( SELECT group_concat( tp.post_name) FROM pk_teacher_position tp WHERE FIND_IN_SET(tp.post_id,ti.post_ids) )
        post_names ,
        (SELECT GROUP_CONCAT(ps.subject_name)from pk_subject ps WHERE FIND_IN_SET(ps.subject_id,ti.subject_ids))
        subject_names,
        bu.phone
        FROM
        pk_teacher_info ti
        LEFT JOIN base_user bu ON ti.user_id = bu.id
        LEFT JOIN pk_teacher_position a on ti.post_ids = a.post_id
        LEFT JOIN pk_subject b on ti.subject_ids = b.subject_id
        <if test="_parameter != null">
            <where>
                <if test="schoolCode != null and schoolCode != ''">
                    and ti.school_code = #{schoolCode,jdbcType=VARCHAR}
                </if>
                <if test="jobNo != null and jobNo != ''">
                    and ti.job_no = #{jobNo,jdbcType=VARCHAR}
                </if>
                <if test="teacherName != null and teacherName != ''">
                    and ti.teacher_name = #{teacherName,jdbcType=VARCHAR}
                </if>
                <if test="phone != null and phone != ''">
                    and bu.phone = #{phone,jdbcType=VARCHAR}
                </if>
                <if test="postIds != null and postIds != ''">
                    and FIND_IN_SET(#{postIds,jdbcType=VARCHAR} ,ti.post_ids)
                </if>
                <if test="subjectIds != null and subjectIds != ''">
                    and FIND_IN_SET(#{subjectIds,jdbcType=VARCHAR} ,ti.subject_ids)
                </if>
                and bu.`status` = '1'
            </where>
        </if>
        order by ti.create_time desc
    </select>
    <select id="selectByCondition" parameterType="dckj.arrange.common.model.request.TeacherInfoVo" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM pk_teacher_info WHERE school_code = #{schoolCode,jdbcType=VARCHAR}  AND job_no = #{jobNo,jdbcType=VARCHAR}
        and <![CDATA[ user_id <> #{userId,jdbcType=VARCHAR}  ]]>
    </select>
    <insert id="insertBatch" parameterType="java.util.List">
        insert into pk_teacher_info (<include refid="Base_Column_List"/>) values
        <foreach collection="list" item="teacherInfos" separator=",">
            (#{teacherInfos.userId,jdbcType=VARCHAR} ,#{teacherInfos.postIds,jdbcType=VARCHAR}
            ,#{teacherInfos.subjectIds,jdbcType=VARCHAR} ,
            #{teacherInfos.jobNo,jdbcType=VARCHAR} ,#{teacherInfos.teacherName,jdbcType=VARCHAR}
            ,#{teacherInfos.schoolCode,jdbcType=VARCHAR} ,#{teacherInfos.createTime,jdbcType=TIMESTAMP} ,
            #{teacherInfos.updateTime,jdbcType=TIMESTAMP} )
        </foreach>
    </insert>
</mapper>
